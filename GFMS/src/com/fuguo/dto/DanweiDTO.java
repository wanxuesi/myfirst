package com.fuguo.dto;

import java.io.Serializable;

import bsw.base.BaseDTO;



/**
 * Danwei generated by MyEclipse - Hibernate Tools
 */

public class DanweiDTO  extends BaseDTO {


    // Fields    

     /**
	 * 
	 */
	private static final long serialVersionUID = -7656385157715545791L;
	private Integer id;
     private String name;
     private Integer parent;
     private String parentName;
     private String bz;


    // Constructors

    /** default constructor */
    public DanweiDTO() {
    }

    
    /** full constructor */
    public DanweiDTO(String name, Integer parent) {
        this.name = name;
        this.parent = parent;
    }
    

   
    // Property accessors

   

    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    public Integer getParent() {
        return this.parent;
    }
    
    public void setParent(Integer parent) {
        this.parent = parent;
    }
    
    
    public Integer getId() {
        return this.id;
    }
    //其实setId(Integer id)这个方法可以不用了。因为下面的setId(Serializable id)本身就是一个泛型。
    //2者选一也是可以的
    public void setId(Integer id) {
        this.id = id;
    }

	@Override
	public void setId(Serializable id) {
		this.id=(Integer)id;
		
	}
   /**
    * 这个方法可以不用写吧？因为获得的Integer或者String类型的会传给泛型Serializable
    * //Integer 或者serial都可以 因为会自动放到泛型里面的
	//用 Serializable 更好，因为hibernate本身就是要获得泛型。测试通过！
    */
	//public Serializable getId(){
	//	return this.id;
	//}


	public String getBz() {
		return bz;
	}


	public void setBz(String bz) {
		this.bz = bz;
	}


	public String getParentName() {
		return parentName;
	}


	public void setParentName(String parentName) {
		this.parentName = parentName;
	}







}